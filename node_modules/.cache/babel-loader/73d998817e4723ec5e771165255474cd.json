{"ast":null,"code":"import React from 'react';\nimport { updateNewMessageBodyCreator, sendMessageCreator } from '../../../Redux/message-reducer';\nimport Messages from './Messages';\nimport StoreContext from '../../../StoreContext';\nimport { connect } from 'react-redux';\n\nlet mapStateToProps = state => {\n  return {\n    dialogsPage: state.dialogsPage\n  };\n};\n\nlet mapDispatchToProps = dispatch => {\n  return {\n    updateNewMessageBody: () => {\n      dispatch(sendMessageCreator());\n    },\n    sendMessage: body => {\n      dispatch(updateNewMessageBodyCreator(body));\n    }\n  };\n};\n\nconst SuperDialogsContainer = connect(mapStateToProps, mapDispatchToProps)(Messages);\nexport default MessagesContainer;","map":{"version":3,"sources":["/Users/veronikafedosenko/Desktop/Diploma/Bright_future_front_dev/01/project1/src/components/Article/Messages/MessagesContainer.jsx"],"names":["React","updateNewMessageBodyCreator","sendMessageCreator","Messages","StoreContext","connect","mapStateToProps","state","dialogsPage","mapDispatchToProps","dispatch","updateNewMessageBody","sendMessage","body","SuperDialogsContainer","MessagesContainer"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,2BAAT,EAAsCC,kBAAtC,QAAgE,gCAAhE;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,YAAP,MAAyB,uBAAzB;AACA,SAASC,OAAT,QAAwB,aAAxB;;AAGA,IAAIC,eAAe,GAAIC,KAAD,IAAW;AAC/B,SAAO;AACLC,IAAAA,WAAW,EAAED,KAAK,CAACC;AADd,GAAP;AAGD,CAJD;;AAKA,IAAIC,kBAAkB,GAAIC,QAAD,IAAc;AACrC,SAAO;AACLC,IAAAA,oBAAoB,EAAE,MAAM;AAC1BD,MAAAA,QAAQ,CAACR,kBAAkB,EAAnB,CAAR;AACD,KAHI;AAILU,IAAAA,WAAW,EAAGC,IAAD,IAAU;AACrBH,MAAAA,QAAQ,CAACT,2BAA2B,CAACY,IAAD,CAA5B,CAAR;AACD;AANI,GAAP;AAQD,CATD;;AAWA,MAAMC,qBAAqB,GAAGT,OAAO,CAACC,eAAD,EAAkBG,kBAAlB,CAAP,CAA6CN,QAA7C,CAA9B;AAEA,eAAeY,iBAAf","sourcesContent":["import React from 'react';\n\nimport { updateNewMessageBodyCreator, sendMessageCreator } from '../../../Redux/message-reducer';\nimport Messages from './Messages';\nimport StoreContext from '../../../StoreContext';\nimport { connect } from 'react-redux'\n\n\nlet mapStateToProps = (state) => {\n  return {\n    dialogsPage: state.dialogsPage\n  }\n}\nlet mapDispatchToProps = (dispatch) => {\n  return {\n    updateNewMessageBody: () => {\n      dispatch(sendMessageCreator());\n    },\n    sendMessage: (body) => {\n      dispatch(updateNewMessageBodyCreator(body));\n    }\n  }\n}\n\nconst SuperDialogsContainer = connect(mapStateToProps, mapDispatchToProps)(Messages);\n\nexport default MessagesContainer;"]},"metadata":{},"sourceType":"module"}