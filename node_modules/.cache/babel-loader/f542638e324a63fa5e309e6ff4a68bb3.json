{"ast":null,"code":"import profileReducer from \"./profile-reducer\";\nconst ADD_POST = 'ADD-POST';\nconst UPDATE_NEW_POST_TEXT = 'UPDATE-NEW-POST-TEXT';\nconst UPDATE_NEW_MESSAGE_BODY = 'UPDATE_NEW_MESSAGE_BODY';\nconst SEND_MESSAGE = 'SEND_MESSAGE';\nlet store = {\n  _state: {\n    profilePage: {\n      postsData: [{\n        id: 1,\n        message: 'Hi world',\n        like: 15\n      }, {\n        id: 2,\n        message: 'My first post(second)',\n        like: 25\n      }, {\n        id: 3,\n        message: 'Pis',\n        like: 12\n      }, {\n        id: 4,\n        message: 'os',\n        like: 999\n      }],\n      newPostText: ''\n    },\n    dialogsPage: {\n      usersData: [{\n        id: 1,\n        name: 'John'\n      }, {\n        id: 2,\n        name: 'Jesus'\n      }, {\n        id: 3,\n        name: 'Jacob'\n      }, {\n        id: 4,\n        name: 'Jessica'\n      }, {\n        id: 5,\n        name: 'Jane'\n      }, {\n        id: 6,\n        name: 'Jerry'\n      }],\n      messageData: [{\n        id: 1,\n        message: 'Huylow'\n      }, {\n        id: 2,\n        message: 'Я хожу по воде'\n      }, {\n        id: 3,\n        message: 'Жакоб или Якоб?'\n      }, {\n        id: 4,\n        message: 'Альба?'\n      }, {\n        id: 5,\n        message: 'Fuck'\n      }],\n      newMessageBody: ''\n    },\n    navbar: {\n      friendData: [{\n        name: 'Jessica',\n        id: 1\n      }, {\n        name: 'John',\n        id: 2\n      }, {\n        name: 'Jacob',\n        id: 3\n      }]\n    }\n  },\n\n  _callSubscriber() {},\n\n  getState() {\n    return this._state;\n  },\n\n  subscribe(observer) {\n    this._callSubscriber = observer;\n  },\n\n  dispatch(action) {\n    this._state.profilePage = profileReducer(this._state.profilePage, action);\n\n    if (action.type === ADD_POST) {\n      let newPost = {\n        id: 5,\n        message: this._state.profilePage.newPostText,\n        like: 0\n      };\n\n      this._state.profilePage.postsData.push(newPost);\n\n      this._state.profilePage.newPostText = '';\n\n      this._callSubscriber(this._state);\n    } else if (action.type === UPDATE_NEW_POST_TEXT) {\n      this._state.profilePage.newPostText = action.newText;\n\n      this._callSubscriber(this._state);\n    } else if (action.type === UPDATE_NEW_MESSAGE_BODY) {\n      this._state.dialogsPage.newMessageBody = action.body;\n\n      this._callSubscriber(this._state);\n    } else if (action.type === SEND_MESSAGE) {\n      let body = this._state.dialogsPage.newMessageBody;\n      this._state.dialogsPage.newMessageBody = '';\n\n      this._state.dialogsPage.messageData.push({\n        id: 6,\n        message: body\n      });\n\n      this._callSubscriber(this._state);\n    }\n  }\n\n};\nexport const addPostActionCreator = () => {\n  return {\n    type: 'ADD-POST'\n  };\n};\nexport const updateNewPostTextActionCreator = text => {\n  return {\n    type: 'UPDATE-NEW-POST-TEXT',\n    newText: text\n  };\n};\nexport const sendMessageCreator = () => {\n  return {\n    type: SEND_MESSAGE\n  };\n};\nexport const updateNewMessageBodyCreator = body => {\n  return {\n    type: UPDATE_NEW_MESSAGE_BODY,\n    body: body\n  };\n};\nexport default store;\nwindow.store = store;","map":{"version":3,"sources":["/Users/veronikafedosenko/Desktop/Diploma/Bright_future_front_dev/01/project1/src/Redux/state.js"],"names":["profileReducer","ADD_POST","UPDATE_NEW_POST_TEXT","UPDATE_NEW_MESSAGE_BODY","SEND_MESSAGE","store","_state","profilePage","postsData","id","message","like","newPostText","dialogsPage","usersData","name","messageData","newMessageBody","navbar","friendData","_callSubscriber","getState","subscribe","observer","dispatch","action","type","newPost","push","newText","body","addPostActionCreator","updateNewPostTextActionCreator","text","sendMessageCreator","updateNewMessageBodyCreator","window"],"mappings":"AAAA,OAAOA,cAAP,MAA2B,mBAA3B;AAEA,MAAMC,QAAQ,GAAG,UAAjB;AACA,MAAMC,oBAAoB,GAAG,sBAA7B;AAEA,MAAMC,uBAAuB,GAAG,yBAAhC;AACA,MAAMC,YAAY,GAAG,cAArB;AAEA,IAAIC,KAAK,GAAG;AACRC,EAAAA,MAAM,EAAE;AACJC,IAAAA,WAAW,EAAE;AACTC,MAAAA,SAAS,EAAE,CACP;AAAEC,QAAAA,EAAE,EAAE,CAAN;AAASC,QAAAA,OAAO,EAAE,UAAlB;AAA8BC,QAAAA,IAAI,EAAE;AAApC,OADO,EAEP;AAAEF,QAAAA,EAAE,EAAE,CAAN;AAASC,QAAAA,OAAO,EAAE,uBAAlB;AAA2CC,QAAAA,IAAI,EAAE;AAAjD,OAFO,EAGP;AAAEF,QAAAA,EAAE,EAAE,CAAN;AAASC,QAAAA,OAAO,EAAE,KAAlB;AAAyBC,QAAAA,IAAI,EAAE;AAA/B,OAHO,EAIP;AAAEF,QAAAA,EAAE,EAAE,CAAN;AAASC,QAAAA,OAAO,EAAE,IAAlB;AAAwBC,QAAAA,IAAI,EAAE;AAA9B,OAJO,CADF;AAOTC,MAAAA,WAAW,EAAE;AAPJ,KADT;AAUJC,IAAAA,WAAW,EAAE;AACTC,MAAAA,SAAS,EAAE,CACP;AAAEL,QAAAA,EAAE,EAAE,CAAN;AAASM,QAAAA,IAAI,EAAE;AAAf,OADO,EAEP;AAAEN,QAAAA,EAAE,EAAE,CAAN;AAASM,QAAAA,IAAI,EAAE;AAAf,OAFO,EAGP;AAAEN,QAAAA,EAAE,EAAE,CAAN;AAASM,QAAAA,IAAI,EAAE;AAAf,OAHO,EAIP;AAAEN,QAAAA,EAAE,EAAE,CAAN;AAASM,QAAAA,IAAI,EAAE;AAAf,OAJO,EAKP;AAAEN,QAAAA,EAAE,EAAE,CAAN;AAASM,QAAAA,IAAI,EAAE;AAAf,OALO,EAMP;AAAEN,QAAAA,EAAE,EAAE,CAAN;AAASM,QAAAA,IAAI,EAAE;AAAf,OANO,CADF;AASTC,MAAAA,WAAW,EAAE,CACT;AAAEP,QAAAA,EAAE,EAAE,CAAN;AAASC,QAAAA,OAAO,EAAE;AAAlB,OADS,EAET;AAAED,QAAAA,EAAE,EAAE,CAAN;AAASC,QAAAA,OAAO,EAAE;AAAlB,OAFS,EAGT;AAAED,QAAAA,EAAE,EAAE,CAAN;AAASC,QAAAA,OAAO,EAAE;AAAlB,OAHS,EAIT;AAAED,QAAAA,EAAE,EAAE,CAAN;AAASC,QAAAA,OAAO,EAAE;AAAlB,OAJS,EAKT;AAAED,QAAAA,EAAE,EAAE,CAAN;AAASC,QAAAA,OAAO,EAAE;AAAlB,OALS,CATJ;AAgBTO,MAAAA,cAAc,EAAE;AAhBP,KAVT;AA4BJC,IAAAA,MAAM,EAAE;AACJC,MAAAA,UAAU,EAAE,CACR;AAAEJ,QAAAA,IAAI,EAAE,SAAR;AAAmBN,QAAAA,EAAE,EAAE;AAAvB,OADQ,EAER;AAAEM,QAAAA,IAAI,EAAE,MAAR;AAAgBN,QAAAA,EAAE,EAAE;AAApB,OAFQ,EAGR;AAAEM,QAAAA,IAAI,EAAE,OAAR;AAAiBN,QAAAA,EAAE,EAAE;AAArB,OAHQ;AADR;AA5BJ,GADA;;AAqCRW,EAAAA,eAAe,GAAG,CACjB,CAtCO;;AAuCRC,EAAAA,QAAQ,GAAG;AACP,WACI,KAAKf,MADT;AAEH,GA1CO;;AA2CRgB,EAAAA,SAAS,CAACC,QAAD,EAAW;AAChB,SAAKH,eAAL,GAAuBG,QAAvB;AACH,GA7CO;;AA8CRC,EAAAA,QAAQ,CAACC,MAAD,EAAS;AAEb,SAAKnB,MAAL,CAAYC,WAAZ,GAA0BP,cAAc,CAAC,KAAKM,MAAL,CAAYC,WAAb,EAA0BkB,MAA1B,CAAxC;;AAIA,QAAIA,MAAM,CAACC,IAAP,KAAgBzB,QAApB,EAA8B;AAC1B,UAAI0B,OAAO,GAAG;AACVlB,QAAAA,EAAE,EAAE,CADM;AAEVC,QAAAA,OAAO,EAAE,KAAKJ,MAAL,CAAYC,WAAZ,CAAwBK,WAFvB;AAGVD,QAAAA,IAAI,EAAE;AAHI,OAAd;;AAKA,WAAKL,MAAL,CAAYC,WAAZ,CAAwBC,SAAxB,CAAkCoB,IAAlC,CAAuCD,OAAvC;;AACA,WAAKrB,MAAL,CAAYC,WAAZ,CAAwBK,WAAxB,GAAsC,EAAtC;;AACA,WAAKQ,eAAL,CAAqB,KAAKd,MAA1B;AACH,KATD,MAUK,IAAImB,MAAM,CAACC,IAAP,KAAgBxB,oBAApB,EAA0C;AAC3C,WAAKI,MAAL,CAAYC,WAAZ,CAAwBK,WAAxB,GAAsCa,MAAM,CAACI,OAA7C;;AACA,WAAKT,eAAL,CAAqB,KAAKd,MAA1B;AACH,KAHI,MAGE,IAAImB,MAAM,CAACC,IAAP,KAAgBvB,uBAApB,EAA6C;AAChD,WAAKG,MAAL,CAAYO,WAAZ,CAAwBI,cAAxB,GAAyCQ,MAAM,CAACK,IAAhD;;AACA,WAAKV,eAAL,CAAqB,KAAKd,MAA1B;AACH,KAHM,MAIF,IAAImB,MAAM,CAACC,IAAP,KAAgBtB,YAApB,EAAkC;AACnC,UAAI0B,IAAI,GAAG,KAAKxB,MAAL,CAAYO,WAAZ,CAAwBI,cAAnC;AACA,WAAKX,MAAL,CAAYO,WAAZ,CAAwBI,cAAxB,GAAyC,EAAzC;;AACA,WAAKX,MAAL,CAAYO,WAAZ,CAAwBG,WAAxB,CAAoCY,IAApC,CAAyC;AAAEnB,QAAAA,EAAE,EAAE,CAAN;AAASC,QAAAA,OAAO,EAAEoB;AAAlB,OAAzC;;AACA,WAAKV,eAAL,CAAqB,KAAKd,MAA1B;AACH;AACJ;;AA3EO,CAAZ;AA6EA,OAAO,MAAMyB,oBAAoB,GAAG,MAAM;AAEtC,SAAO;AACHL,IAAAA,IAAI,EAAE;AADH,GAAP;AAGH,CALM;AAMP,OAAO,MAAMM,8BAA8B,GAAIC,IAAD,IAAU;AACpD,SAAO;AACHP,IAAAA,IAAI,EAAE,sBADH;AAC2BG,IAAAA,OAAO,EAAEI;AADpC,GAAP;AAGH,CAJM;AAKP,OAAO,MAAMC,kBAAkB,GAAG,MAAM;AAEpC,SAAO;AACHR,IAAAA,IAAI,EAAEtB;AADH,GAAP;AAGH,CALM;AAMP,OAAO,MAAM+B,2BAA2B,GAAIL,IAAD,IAAU;AACjD,SAAO;AAAEJ,IAAAA,IAAI,EAAEvB,uBAAR;AAAiC2B,IAAAA,IAAI,EAAEA;AAAvC,GAAP;AACH,CAFM;AAIP,eAAezB,KAAf;AAEA+B,MAAM,CAAC/B,KAAP,GAAeA,KAAf","sourcesContent":["import profileReducer from \"./profile-reducer\";\n\nconst ADD_POST = 'ADD-POST';\nconst UPDATE_NEW_POST_TEXT = 'UPDATE-NEW-POST-TEXT';\n\nconst UPDATE_NEW_MESSAGE_BODY = 'UPDATE_NEW_MESSAGE_BODY';\nconst SEND_MESSAGE = 'SEND_MESSAGE';\n\nlet store = {\n    _state: {\n        profilePage: {\n            postsData: [\n                { id: 1, message: 'Hi world', like: 15, },\n                { id: 2, message: 'My first post(second)', like: 25 },\n                { id: 3, message: 'Pis', like: 12 },\n                { id: 4, message: 'os', like: 999 },\n            ],\n            newPostText: ''\n        },\n        dialogsPage: {\n            usersData: [\n                { id: 1, name: 'John' },\n                { id: 2, name: 'Jesus' },\n                { id: 3, name: 'Jacob' },\n                { id: 4, name: 'Jessica' },\n                { id: 5, name: 'Jane' },\n                { id: 6, name: 'Jerry' }\n            ],\n            messageData: [\n                { id: 1, message: 'Huylow' },\n                { id: 2, message: 'Я хожу по воде' },\n                { id: 3, message: 'Жакоб или Якоб?' },\n                { id: 4, message: 'Альба?' },\n                { id: 5, message: 'Fuck' },\n            ],\n            newMessageBody: '',\n        },\n        navbar: {\n            friendData: [\n                { name: 'Jessica', id: 1 },\n                { name: 'John', id: 2 },\n                { name: 'Jacob', id: 3 }\n            ]\n        }\n    },\n    _callSubscriber() {\n    },\n    getState() {\n        return (\n            this._state)\n    },\n    subscribe(observer) {\n        this._callSubscriber = observer\n    },\n    dispatch(action) {\n\n        this._state.profilePage = profileReducer(this._state.profilePage, action);\n\n\n\n        if (action.type === ADD_POST) {\n            let newPost = {\n                id: 5,\n                message: this._state.profilePage.newPostText,\n                like: 0\n            };\n            this._state.profilePage.postsData.push(newPost);\n            this._state.profilePage.newPostText = '';\n            this._callSubscriber(this._state);\n        }\n        else if (action.type === UPDATE_NEW_POST_TEXT) {\n            this._state.profilePage.newPostText = action.newText;\n            this._callSubscriber(this._state);\n        } else if (action.type === UPDATE_NEW_MESSAGE_BODY) {\n            this._state.dialogsPage.newMessageBody = action.body;\n            this._callSubscriber(this._state);\n        }\n        else if (action.type === SEND_MESSAGE) {\n            let body = this._state.dialogsPage.newMessageBody;\n            this._state.dialogsPage.newMessageBody = '';\n            this._state.dialogsPage.messageData.push({ id: 6, message: body });\n            this._callSubscriber(this._state);\n        }\n    }\n}\nexport const addPostActionCreator = () => {\n\n    return {\n        type: 'ADD-POST'\n    }\n}\nexport const updateNewPostTextActionCreator = (text) => {\n    return {\n        type: 'UPDATE-NEW-POST-TEXT', newText: text\n    }\n}\nexport const sendMessageCreator = () => {\n\n    return {\n        type: SEND_MESSAGE\n    }\n}\nexport const updateNewMessageBodyCreator = (body) => {\n    return { type: UPDATE_NEW_MESSAGE_BODY, body: body }\n}\n\nexport default store;\n\nwindow.store = store;\n"]},"metadata":{},"sourceType":"module"}