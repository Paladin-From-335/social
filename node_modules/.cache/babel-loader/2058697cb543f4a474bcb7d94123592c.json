{"ast":null,"code":"var _jsxFileName = \"/Users/veronikafedosenko/Desktop/Diploma/Bright_future_front_dev/01/project1/src/components/Article/Users/UsersContainer.jsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { followAC, unfollowAC, setUsersAC, setCurrentPageAC, setUsersTotalCountAC, toggleIsFetchingAC } from '../../../Redux/users-reducer';\nimport * as axios from 'axios';\nimport Users from './Users';\nimport Preloader from '../../common/preloader/Preloader';\n\nclass UsersContainer extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.onPageChanged = pageNumber => {\n      this.props.setCurrentPage(pageNumber);\n      this.props.toggleIsFetching(true);\n      axios.get(`https://social-network.samuraijs.com/api/1.0/users?page=${pageNumber}&count=${this.props.pageSize}`).then(response => {\n        this.props.toggleIsFetching(false);\n        this.props.setUsers(response.data.items); // this.props.setTotalUsersCount(response.data.totalCount);\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.props.toggleIsFetching(true);\n    axios.get(`https://social-network.samuraijs.com/api/1.0/users?page=${this.props.currentPage}&count=${this.props.pageSize}`).then(response => {\n      this.props.toggleIsFetching(false);\n      this.props.setUsers(response.data.items);\n      this.props.setTotalUsersCount(response.data.totalCount);\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, this.props.isFetching ? /*#__PURE__*/React.createElement(Preloader, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 38\n      }\n    }) : null, /*#__PURE__*/React.createElement(Users, {\n      totalUsersCount: this.props.totalUsersCount,\n      pageSize: this.props.pageSize,\n      currentPage: this.props.currentPage,\n      onPageChanged: this.onPageChanged,\n      users: this.props.users,\n      follow: this.props.follow,\n      unfollow: this.props.unfollow,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\nlet mapStateToProps = state => {\n  return {\n    users: state.usersPage.users,\n    pageSize: state.usersPage.pageSize,\n    totalUsersCount: state.usersPage.totalUsersCount,\n    currentPage: state.usersPage.currentPage,\n    isFetching: state.usersPage.isFetching\n  };\n};\n\nlet mapDispatchToProps = dispatch => {\n  return {\n    follow: userID => {\n      dispatch(followAC(userID));\n    },\n    unfollow: userID => {\n      dispatch(unfollowAC(userID));\n    },\n    setUsers: users => {\n      dispatch(setUsersAC(users));\n    },\n    setCurrentPage: pageNumber => {\n      dispatch(setCurrentPageAC(pageNumber));\n    },\n    setTotalUsersCount: totalCount => {\n      dispatch(setUsersTotalCountAC(totalCount));\n    },\n    toggleIsFetching: isFetching => {\n      dispatch(toggleIsFetchingAC(isFetching));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UsersContainer);","map":{"version":3,"sources":["/Users/veronikafedosenko/Desktop/Diploma/Bright_future_front_dev/01/project1/src/components/Article/Users/UsersContainer.jsx"],"names":["React","connect","followAC","unfollowAC","setUsersAC","setCurrentPageAC","setUsersTotalCountAC","toggleIsFetchingAC","axios","Users","Preloader","UsersContainer","Component","onPageChanged","pageNumber","props","setCurrentPage","toggleIsFetching","get","pageSize","then","response","setUsers","data","items","componentDidMount","currentPage","setTotalUsersCount","totalCount","render","isFetching","totalUsersCount","users","follow","unfollow","mapStateToProps","state","usersPage","mapDispatchToProps","dispatch","userID"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { followAC, unfollowAC, setUsersAC, setCurrentPageAC, setUsersTotalCountAC, toggleIsFetchingAC } from '../../../Redux/users-reducer';\nimport * as axios from 'axios';\nimport Users from './Users';\nimport Preloader from '../../common/preloader/Preloader';\n\nclass UsersContainer extends React.Component {\n    componentDidMount() {\n        this.props.toggleIsFetching(true);\n        axios.get(`https://social-network.samuraijs.com/api/1.0/users?page=${this.props.currentPage}&count=${this.props.pageSize}`)\n        .then(response => {\n            this.props.toggleIsFetching(false);\n            this.props.setUsers(response.data.items);\n            this.props.setTotalUsersCount(response.data.totalCount);\n        });\n    }\n    onPageChanged = (pageNumber) => {\n        this.props.setCurrentPage(pageNumber);\n        this.props.toggleIsFetching(true);\n\n        axios.get(`https://social-network.samuraijs.com/api/1.0/users?page=${pageNumber}&count=${this.props.pageSize}`)\n        .then(response => {\n            this.props.toggleIsFetching(false);\n            this.props.setUsers(response.data.items);\n            // this.props.setTotalUsersCount(response.data.totalCount);\n\n        });\n\n    }\n\n    render() {\n        return (\n            <>\n            {this.props.isFetching ? <Preloader /> : null}\n                <Users totalUsersCount={this.props.totalUsersCount}\n                    pageSize={this.props.pageSize}\n                    currentPage={this.props.currentPage}\n                    onPageChanged={this.onPageChanged}\n                    users={this.props.users}\n                    follow={this.props.follow}\n                    unfollow={this.props.unfollow}\n                />\n            </>\n        )\n    }\n}\n\n\n\nlet mapStateToProps = (state) => {\n    return {\n        users: state.usersPage.users,\n        pageSize: state.usersPage.pageSize,\n        totalUsersCount: state.usersPage.totalUsersCount,\n        currentPage: state.usersPage.currentPage,\n        isFetching: state.usersPage.isFetching\n    }\n}\n\nlet mapDispatchToProps = (dispatch) => {\n    return {\n        follow: (userID) => {\n            dispatch(followAC(userID))\n        },\n        unfollow: (userID) => {\n            dispatch(unfollowAC(userID))\n        },\n        setUsers: (users) => {\n            dispatch(setUsersAC(users))\n        },\n        setCurrentPage: (pageNumber) => {\n            dispatch(setCurrentPageAC(pageNumber))\n        },\n        setTotalUsersCount: (totalCount) => {\n            dispatch(setUsersTotalCountAC(totalCount))\n        },\n        toggleIsFetching: (isFetching) => {\n            dispatch(toggleIsFetchingAC(isFetching));\n        },\n    }\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UsersContainer);"]},"metadata":{},"sourceType":"module"}