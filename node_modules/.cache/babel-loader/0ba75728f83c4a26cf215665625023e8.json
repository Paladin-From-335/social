{"ast":null,"code":"var _jsxFileName = \"/Users/veronikafedosenko/Desktop/Diploma/Bright_future_front_dev/01/project1/src/components/Article/Profile/MyPosts/MyPostsContainer.jsx\";\nimport React from 'react';\nimport { updateNewPostTextActionCreator, addPostActionCreator } from '../../../../Redux/profile-reducer';\nimport MyPosts from './MyPosts';\n\nconst MyPostsContainer = props => {\n  let addPost = () => {\n    props.store.dispatch(addPostActionCreator());\n  };\n\n  let onPostChange = text => {\n    let action = updateNewPostTextActionCreator(text);\n    props.store.dispatch(action);\n  };\n\n  return /*#__PURE__*/React.createElement(MyPosts, {\n    updateNewPostText: onPostChange,\n    addPost: addPost,\n    postsData: props.postsData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }\n  });\n};\n\nexport default MyPostsContainer;","map":{"version":3,"sources":["/Users/veronikafedosenko/Desktop/Diploma/Bright_future_front_dev/01/project1/src/components/Article/Profile/MyPosts/MyPostsContainer.jsx"],"names":["React","updateNewPostTextActionCreator","addPostActionCreator","MyPosts","MyPostsContainer","props","addPost","store","dispatch","onPostChange","text","action","postsData"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,8BAAT,EAAyCC,oBAAzC,QAAqE,mCAArE;AACA,OAAOC,OAAP,MAAoB,WAApB;;AAGA,MAAMC,gBAAgB,GAAIC,KAAD,IAAW;AAChC,MAAIC,OAAO,GAAG,MAAM;AAChBD,IAAAA,KAAK,CAACE,KAAN,CAAYC,QAAZ,CAAqBN,oBAAoB,EAAzC;AACH,GAFD;;AAIA,MAAIO,YAAY,GAAIC,IAAD,IAAU;AACzB,QAAIC,MAAM,GAAGV,8BAA8B,CAACS,IAAD,CAA3C;AACAL,IAAAA,KAAK,CAACE,KAAN,CAAYC,QAAZ,CAAqBG,MAArB;AACH,GAHD;;AAIA,sBAAQ,oBAAC,OAAD;AAAS,IAAA,iBAAiB,EAAEF,YAA5B;AACJ,IAAA,OAAO,EAAEH,OADL;AACc,IAAA,SAAS,EAAED,KAAK,CAACO,SAD/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAR;AAEH,CAXD;;AAaA,eAAeR,gBAAf","sourcesContent":["import React from 'react';\nimport { updateNewPostTextActionCreator, addPostActionCreator } from '../../../../Redux/profile-reducer';\nimport MyPosts from './MyPosts';\n\n\nconst MyPostsContainer = (props) => {\n    let addPost = () => {\n        props.store.dispatch(addPostActionCreator());\n    }\n    \n    let onPostChange = (text) => {\n        let action = updateNewPostTextActionCreator(text);\n        props.store.dispatch(action);\n    }\n    return (<MyPosts updateNewPostText={onPostChange}\n        addPost={addPost} postsData={props.postsData}/>)\n}\n\nexport default MyPostsContainer; "]},"metadata":{},"sourceType":"module"}