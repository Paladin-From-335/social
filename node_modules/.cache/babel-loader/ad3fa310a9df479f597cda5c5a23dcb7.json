{"ast":null,"code":"var _jsxFileName = \"/Users/veronikafedosenko/Desktop/Diploma/Bright_future_front_dev/01/project1/src/components/Article/Messages/MessagesContainer.jsx\";\nimport React from 'react';\nimport { updateNewMessageBodyCreator, sendMessageCreator } from '../../../Redux/message-reducer';\nimport Messages from './Messages';\nimport StoreContext from '../../../StoreContext';\nimport { connect } from 'react-redux';\n\nconst MessagesContainer = () => {\n  return /*#__PURE__*/React.createElement(StoreContext.Consumer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 11\n    }\n  }, store => {\n    let onSendMessageClick = () => {\n      store.dispatch(sendMessageCreator());\n    };\n\n    let onNewMessageChange = body => {\n      store.dispatch(updateNewMessageBodyCreator(body));\n    };\n\n    return /*#__PURE__*/React.createElement(Messages, {\n      updateNewMessageBody: onNewMessageChange,\n      sendMessage: onSendMessageClick,\n      dialogsPage: store.getState().messagesState,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 11\n      }\n    });\n  });\n};\n\nlet mapStateToProps = state => {\n  return {\n    dialogsPage: state.dialogsPage\n  };\n};\n\nlet mapDispatchToProps = dispatch => {\n  return {\n    updateNewMessageBody: () => {\n      dispatch(sendMessageCreator());\n    },\n    sendMessage: body => {\n      dispatch(updateNewMessageBodyCreator(body));\n    }\n  };\n};\n\nconst SuperDialogsContainer = connect(mapStateToProps, mapDispatchToProps)(Messages);\nexport default MessagesContainer;","map":{"version":3,"sources":["/Users/veronikafedosenko/Desktop/Diploma/Bright_future_front_dev/01/project1/src/components/Article/Messages/MessagesContainer.jsx"],"names":["React","updateNewMessageBodyCreator","sendMessageCreator","Messages","StoreContext","connect","MessagesContainer","store","onSendMessageClick","dispatch","onNewMessageChange","body","getState","messagesState","mapStateToProps","state","dialogsPage","mapDispatchToProps","updateNewMessageBody","sendMessage","SuperDialogsContainer"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,2BAAT,EAAsCC,kBAAtC,QAAgE,gCAAhE;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,YAAP,MAAyB,uBAAzB;AACA,SAASC,OAAT,QAAwB,aAAxB;;AAEA,MAAMC,iBAAiB,GAAG,MAAM;AAE9B,sBAAQ,oBAAC,YAAD,CAAc,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEHC,KAAD,IAAW;AACT,QAAIC,kBAAkB,GAAG,MAAM;AAC7BD,MAAAA,KAAK,CAACE,QAAN,CAAeP,kBAAkB,EAAjC;AACD,KAFD;;AAGA,QAAIQ,kBAAkB,GAAIC,IAAD,IAAU;AACjCJ,MAAAA,KAAK,CAACE,QAAN,CAAeR,2BAA2B,CAACU,IAAD,CAA1C;AACD,KAFD;;AAGA,wBACE,oBAAC,QAAD;AAAU,MAAA,oBAAoB,EAAED,kBAAhC;AACE,MAAA,WAAW,EAAEF,kBADf;AAEE,MAAA,WAAW,EAAED,KAAK,CAACK,QAAN,GAAiBC,aAFhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAKD,GAdG,CAAR;AAoBD,CAtBD;;AAwBA,IAAIC,eAAe,GAAIC,KAAD,IAAW;AAC/B,SAAO;AACLC,IAAAA,WAAW,EAAED,KAAK,CAACC;AADd,GAAP;AAGD,CAJD;;AAKA,IAAIC,kBAAkB,GAAIR,QAAD,IAAc;AACrC,SAAO;AACLS,IAAAA,oBAAoB,EAAE,MAAM;AAC1BT,MAAAA,QAAQ,CAACP,kBAAkB,EAAnB,CAAR;AACD,KAHI;AAILiB,IAAAA,WAAW,EAAGR,IAAD,IAAU;AACrBF,MAAAA,QAAQ,CAACR,2BAA2B,CAACU,IAAD,CAA5B,CAAR;AACD;AANI,GAAP;AAQD,CATD;;AAWA,MAAMS,qBAAqB,GAAGf,OAAO,CAACS,eAAD,EAAkBG,kBAAlB,CAAP,CAA6Cd,QAA7C,CAA9B;AAEA,eAAeG,iBAAf","sourcesContent":["import React from 'react';\n\nimport { updateNewMessageBodyCreator, sendMessageCreator } from '../../../Redux/message-reducer';\nimport Messages from './Messages';\nimport StoreContext from '../../../StoreContext';\nimport { connect } from 'react-redux'\n\nconst MessagesContainer = () => {\n\n  return (<StoreContext.Consumer>\n    {\n      (store) => {\n        let onSendMessageClick = () => {\n          store.dispatch(sendMessageCreator());\n        }\n        let onNewMessageChange = (body) => {\n          store.dispatch(updateNewMessageBodyCreator(body));\n        }\n        return (\n          <Messages updateNewMessageBody={onNewMessageChange}\n            sendMessage={onSendMessageClick}\n            dialogsPage={store.getState().messagesState} />\n        )\n      }\n    }\n  </StoreContext.Consumer>\n\n\n  )\n}\n\nlet mapStateToProps = (state) => {\n  return {\n    dialogsPage: state.dialogsPage\n  }\n}\nlet mapDispatchToProps = (dispatch) => {\n  return {\n    updateNewMessageBody: () => {\n      dispatch(sendMessageCreator());\n    },\n    sendMessage: (body) => {\n      dispatch(updateNewMessageBodyCreator(body));\n    }\n  }\n}\n\nconst SuperDialogsContainer = connect(mapStateToProps, mapDispatchToProps)(Messages);\n\nexport default MessagesContainer;"]},"metadata":{},"sourceType":"module"}