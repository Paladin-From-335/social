{"ast":null,"code":"var _jsxFileName = \"/Users/veronikafedosenko/Desktop/Diploma/Bright_future_front_dev/01/project1/src/components/Article/Messages/MessagesContainer.jsx\";\nimport React from 'react';\nimport { updateNewMessageBodyCreator, sendMessageCreator } from '../../../Redux/message-reducer';\nimport Messages from './Messages';\nimport StoreContext from '../../../StoreContext';\nimport { connect } from 'react-redux';\n\nconst MessagesContainer = () => {\n  return /*#__PURE__*/React.createElement(StoreContext.Consumer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 11\n    }\n  }, store => {\n    let messagesState = store.getState().dialogsPage;\n\n    let onSendMessageClick = () => {\n      store.dispatch(sendMessageCreator());\n    };\n\n    let onNewMessageChange = body => {\n      store.dispatch(updateNewMessageBodyCreator(body));\n    };\n\n    return /*#__PURE__*/React.createElement(Messages, {\n      updateNewMessageBody: onNewMessageChange,\n      sendMessage: onSendMessageClick,\n      dialogsPage: store.getState().messagesState,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 11\n      }\n    });\n  });\n};\n\nlet mapStateToProps = state => {\n  return {\n    dialogsPage: state.dialogsPage\n  };\n};\n\nlet mapDispatchToProps = () => {\n  return {\n    updateNewMessageBody: () => {\n      store.dispatch(sendMessageCreator());\n    },\n    sendMessage: () => {}\n  };\n};\n\nconst SuperDialogsContainer = connect(mapStateToProps, mapDispatchToProps)(Messages);\nexport default MessagesContainer;","map":{"version":3,"sources":["/Users/veronikafedosenko/Desktop/Diploma/Bright_future_front_dev/01/project1/src/components/Article/Messages/MessagesContainer.jsx"],"names":["React","updateNewMessageBodyCreator","sendMessageCreator","Messages","StoreContext","connect","MessagesContainer","store","messagesState","getState","dialogsPage","onSendMessageClick","dispatch","onNewMessageChange","body","mapStateToProps","state","mapDispatchToProps","updateNewMessageBody","sendMessage","SuperDialogsContainer"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,2BAAT,EAAsCC,kBAAtC,QAAgE,gCAAhE;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,YAAP,MAAyB,uBAAzB;AACA,SAASC,OAAT,QAAwB,aAAxB;;AAEA,MAAMC,iBAAiB,GAAG,MAAM;AAE9B,sBAAQ,oBAAC,YAAD,CAAc,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEHC,KAAD,IAAW;AACT,QAAIC,aAAa,GAAGD,KAAK,CAACE,QAAN,GAAiBC,WAArC;;AACA,QAAIC,kBAAkB,GAAG,MAAM;AAC7BJ,MAAAA,KAAK,CAACK,QAAN,CAAeV,kBAAkB,EAAjC;AACD,KAFD;;AAGA,QAAIW,kBAAkB,GAAIC,IAAD,IAAU;AACjCP,MAAAA,KAAK,CAACK,QAAN,CAAeX,2BAA2B,CAACa,IAAD,CAA1C;AACD,KAFD;;AAGA,wBACE,oBAAC,QAAD;AAAU,MAAA,oBAAoB,EAAED,kBAAhC;AACE,MAAA,WAAW,EAAEF,kBADf;AAEE,MAAA,WAAW,EAAEJ,KAAK,CAACE,QAAN,GAAiBD,aAFhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAKD,GAfG,CAAR;AAqBD,CAvBD;;AAyBA,IAAIO,eAAe,GAAIC,KAAD,IAAW;AAC/B,SAAO;AACLN,IAAAA,WAAW,EAAEM,KAAK,CAACN;AADd,GAAP;AAGD,CAJD;;AAKA,IAAIO,kBAAkB,GAAG,MAAM;AAC7B,SAAO;AACLC,IAAAA,oBAAoB,EAAE,MAAM;AAC1BX,MAAAA,KAAK,CAACK,QAAN,CAAeV,kBAAkB,EAAjC;AAED,KAJI;AAKLiB,IAAAA,WAAW,EAAE,MAAM,CAAE;AALhB,GAAP;AAOD,CARD;;AAUA,MAAMC,qBAAqB,GAAGf,OAAO,CAACU,eAAD,EAAkBE,kBAAlB,CAAP,CAA6Cd,QAA7C,CAA9B;AAEA,eAAeG,iBAAf","sourcesContent":["import React from 'react';\n\nimport { updateNewMessageBodyCreator, sendMessageCreator } from '../../../Redux/message-reducer';\nimport Messages from './Messages';\nimport StoreContext from '../../../StoreContext';\nimport { connect } from 'react-redux'\n\nconst MessagesContainer = () => {\n\n  return (<StoreContext.Consumer>\n    {\n      (store) => {\n        let messagesState = store.getState().dialogsPage;\n        let onSendMessageClick = () => {\n          store.dispatch(sendMessageCreator());\n        }\n        let onNewMessageChange = (body) => {\n          store.dispatch(updateNewMessageBodyCreator(body));\n        }\n        return (\n          <Messages updateNewMessageBody={onNewMessageChange}\n            sendMessage={onSendMessageClick}\n            dialogsPage={store.getState().messagesState} />\n        )\n      }\n    }\n  </StoreContext.Consumer>\n\n\n  )\n}\n\nlet mapStateToProps = (state) => {\n  return {\n    dialogsPage: state.dialogsPage\n  }\n}\nlet mapDispatchToProps = () => {\n  return {\n    updateNewMessageBody: () => {\n      store.dispatch(sendMessageCreator());\n\n    },\n    sendMessage: () => {}\n  }\n}\n\nconst SuperDialogsContainer = connect(mapStateToProps, mapDispatchToProps)(Messages);\n\nexport default MessagesContainer;"]},"metadata":{},"sourceType":"module"}