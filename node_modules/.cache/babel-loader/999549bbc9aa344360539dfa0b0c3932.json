{"ast":null,"code":"import React from 'react';\nimport { connect } from 'react-redux';\nimport Users from './Users';\nimport { followAC, unfollowAC, setUsersAC } from '../../../Redux/users-reducer';\n\nlet mapStateToProps = state => {\n  return {\n    users: state.usersPage.users,\n    pageSize: state.usersPage.pageSize\n  };\n};\n\nlet mapDispatchToProps = dispatch => {\n  return {\n    follow: userID => {\n      dispatch(followAC(userID));\n    },\n    unfollow: userID => {\n      dispatch(unfollowAC(userID));\n    },\n    setUsers: users => {\n      dispatch(setUsersAC(users));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Users);","map":{"version":3,"sources":["/Users/veronikafedosenko/Desktop/Diploma/Bright_future_front_dev/01/project1/src/components/Article/Users/UsersContainer.jsx"],"names":["React","connect","Users","followAC","unfollowAC","setUsersAC","mapStateToProps","state","users","usersPage","pageSize","mapDispatchToProps","dispatch","follow","userID","unfollow","setUsers"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,SAASC,QAAT,EAAmBC,UAAnB,EAA+BC,UAA/B,QAAiD,8BAAjD;;AAEA,IAAIC,eAAe,GAAIC,KAAD,IAAW;AAC7B,SAAO;AACHC,IAAAA,KAAK,EAAED,KAAK,CAACE,SAAN,CAAgBD,KADpB;AAEHE,IAAAA,QAAQ,EAAEH,KAAK,CAACE,SAAN,CAAgBC;AAFvB,GAAP;AAIH,CALD;;AAOA,IAAIC,kBAAkB,GAAIC,QAAD,IAAc;AACnC,SAAO;AACHC,IAAAA,MAAM,EAAGC,MAAD,IAAY;AAChBF,MAAAA,QAAQ,CAACT,QAAQ,CAACW,MAAD,CAAT,CAAR;AACH,KAHE;AAIHC,IAAAA,QAAQ,EAAGD,MAAD,IAAY;AAClBF,MAAAA,QAAQ,CAACR,UAAU,CAACU,MAAD,CAAX,CAAR;AACH,KANE;AAOHE,IAAAA,QAAQ,EAAGR,KAAD,IAAW;AACjBI,MAAAA,QAAQ,CAACP,UAAU,CAACG,KAAD,CAAX,CAAR;AACH;AATE,GAAP;AAWH,CAZD;;AAeA,eAAeP,OAAO,CAACK,eAAD,EAAkBK,kBAAlB,CAAP,CAA6CT,KAA7C,CAAf","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport Users from './Users';\nimport { followAC, unfollowAC, setUsersAC } from '../../../Redux/users-reducer';\n\nlet mapStateToProps = (state) => {\n    return {\n        users: state.usersPage.users,\n        pageSize: state.usersPage.pageSize,\n    }\n}\n\nlet mapDispatchToProps = (dispatch) => {\n    return {\n        follow: (userID) => {\n            dispatch(followAC(userID))\n        },\n        unfollow: (userID) => {\n            dispatch(unfollowAC(userID))\n        },\n        setUsers: (users) => {\n            dispatch(setUsersAC(users))\n        }\n    }\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Users);"]},"metadata":{},"sourceType":"module"}