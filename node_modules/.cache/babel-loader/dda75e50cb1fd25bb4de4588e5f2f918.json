{"ast":null,"code":"import { rerenderEntireTree } from \"../render\";\nlet state = {\n  profilePage: {\n    postsData: [{\n      id: 1,\n      message: 'Hi pidr',\n      like: 15\n    }, {\n      id: 2,\n      message: 'My first post(second)',\n      like: 25\n    }, {\n      id: 3,\n      message: 'Pis',\n      like: 12\n    }, {\n      id: 4,\n      message: 'os',\n      like: 999\n    }],\n    newPostText: 'some text'\n  },\n  dialogsPage: {\n    usersData: [{\n      id: 1,\n      name: 'John'\n    }, {\n      id: 2,\n      name: 'Jesus'\n    }, {\n      id: 3,\n      name: 'Jacob'\n    }, {\n      id: 4,\n      name: 'Jessica'\n    }, {\n      id: 5,\n      name: 'Jane'\n    }, {\n      id: 6,\n      name: 'Jerry'\n    }],\n    messageData: [{\n      id: 1,\n      message: 'Huylow'\n    }, {\n      id: 2,\n      message: 'Я хожу по воде'\n    }, {\n      id: 3,\n      message: 'Жакоб или Якоб?'\n    }, {\n      id: 4,\n      message: 'Альба?'\n    }, {\n      id: 5,\n      message: 'Fuck'\n    }]\n  },\n  navbar: {\n    friendData: [{\n      name: 'Jessica',\n      id: 1\n    }, {\n      name: 'John',\n      id: 2\n    }, {\n      name: 'Jacob',\n      id: 3\n    }]\n  }\n};\nexport let addPost = postMessage => {\n  let newPost = {\n    id: 5,\n    message: postMessage,\n    like: 0\n  };\n  state.profilePage.postsData.push(updateNewPostText);\n  rerenderEntireTree(state);\n};\nexport let updateNewPostText = newText => {\n  state.profilePage.newPostText.push = newText;\n  rerenderEntireTree(state);\n};\nexport default state;","map":{"version":3,"sources":["/Users/veronikafedosenko/Desktop/Diploma/Светлое будущее Fron-end developer'а/01/project1/src/Redux/state.js"],"names":["rerenderEntireTree","state","profilePage","postsData","id","message","like","newPostText","dialogsPage","usersData","name","messageData","navbar","friendData","addPost","postMessage","newPost","push","updateNewPostText","newText"],"mappings":"AAAA,SAASA,kBAAT,QAAmC,WAAnC;AAEA,IAAIC,KAAK,GAAG;AACRC,EAAAA,WAAW,EAAE;AACTC,IAAAA,SAAS,EAAE,CACP;AAAEC,MAAAA,EAAE,EAAE,CAAN;AAASC,MAAAA,OAAO,EAAE,SAAlB;AAA6BC,MAAAA,IAAI,EAAE;AAAnC,KADO,EAEP;AAAEF,MAAAA,EAAE,EAAE,CAAN;AAASC,MAAAA,OAAO,EAAE,uBAAlB;AAA2CC,MAAAA,IAAI,EAAE;AAAjD,KAFO,EAGP;AAAEF,MAAAA,EAAE,EAAE,CAAN;AAASC,MAAAA,OAAO,EAAE,KAAlB;AAAyBC,MAAAA,IAAI,EAAE;AAA/B,KAHO,EAIP;AAAEF,MAAAA,EAAE,EAAE,CAAN;AAASC,MAAAA,OAAO,EAAE,IAAlB;AAAwBC,MAAAA,IAAI,EAAE;AAA9B,KAJO,CADF;AAOTC,IAAAA,WAAW,EAAE;AAPJ,GADL;AAWRC,EAAAA,WAAW,EAAE;AACTC,IAAAA,SAAS,EAAE,CACP;AAAEL,MAAAA,EAAE,EAAE,CAAN;AAASM,MAAAA,IAAI,EAAE;AAAf,KADO,EAEP;AAAEN,MAAAA,EAAE,EAAE,CAAN;AAASM,MAAAA,IAAI,EAAE;AAAf,KAFO,EAGP;AAAEN,MAAAA,EAAE,EAAE,CAAN;AAASM,MAAAA,IAAI,EAAE;AAAf,KAHO,EAIP;AAAEN,MAAAA,EAAE,EAAE,CAAN;AAASM,MAAAA,IAAI,EAAE;AAAf,KAJO,EAKP;AAAEN,MAAAA,EAAE,EAAE,CAAN;AAASM,MAAAA,IAAI,EAAE;AAAf,KALO,EAMP;AAACN,MAAAA,EAAE,EAAE,CAAL;AAAQM,MAAAA,IAAI,EAAE;AAAd,KANO,CADF;AAUTC,IAAAA,WAAW,EAAE,CACT;AAAEP,MAAAA,EAAE,EAAE,CAAN;AAASC,MAAAA,OAAO,EAAE;AAAlB,KADS,EAET;AAAED,MAAAA,EAAE,EAAE,CAAN;AAASC,MAAAA,OAAO,EAAE;AAAlB,KAFS,EAGT;AAAED,MAAAA,EAAE,EAAE,CAAN;AAASC,MAAAA,OAAO,EAAE;AAAlB,KAHS,EAIT;AAAED,MAAAA,EAAE,EAAE,CAAN;AAASC,MAAAA,OAAO,EAAE;AAAlB,KAJS,EAKT;AAAED,MAAAA,EAAE,EAAE,CAAN;AAASC,MAAAA,OAAO,EAAE;AAAlB,KALS;AAVJ,GAXL;AA8BRO,EAAAA,MAAM,EAAC;AACHC,IAAAA,UAAU,EAAE,CACR;AAAEH,MAAAA,IAAI,EAAE,SAAR;AAAmBN,MAAAA,EAAE,EAAE;AAAvB,KADQ,EAER;AAAEM,MAAAA,IAAI,EAAE,MAAR;AAAgBN,MAAAA,EAAE,EAAE;AAApB,KAFQ,EAGR;AAAEM,MAAAA,IAAI,EAAE,OAAR;AAAiBN,MAAAA,EAAE,EAAE;AAArB,KAHQ;AADT;AA9BC,CAAZ;AAsCA,OAAO,IAAIU,OAAO,GAAIC,WAAD,IAAiB;AAClC,MAAIC,OAAO,GAAG;AACVZ,IAAAA,EAAE,EAAC,CADO;AAEVC,IAAAA,OAAO,EAAEU,WAFC;AAGVT,IAAAA,IAAI,EAAE;AAHI,GAAd;AAKAL,EAAAA,KAAK,CAACC,WAAN,CAAkBC,SAAlB,CAA4Bc,IAA5B,CAAiCC,iBAAjC;AACAlB,EAAAA,kBAAkB,CAACC,KAAD,CAAlB;AACH,CARM;AASP,OAAO,IAAIiB,iBAAiB,GAAIC,OAAD,IAAa;AACxClB,EAAAA,KAAK,CAACC,WAAN,CAAkBK,WAAlB,CAA8BU,IAA9B,GAAqCE,OAArC;AACAnB,EAAAA,kBAAkB,CAACC,KAAD,CAAlB;AACH,CAHM;AAIP,eAAeA,KAAf","sourcesContent":["import { rerenderEntireTree } from \"../render\";\n\nlet state = {\n    profilePage: {\n        postsData: [\n            { id: 1, message: 'Hi pidr', like: 15, },\n            { id: 2, message: 'My first post(second)', like: 25 },\n            { id: 3, message: 'Pis', like: 12 },\n            { id: 4, message: 'os', like: 999 },\n        ],\n        newPostText: 'some text'\n\n    },\n    dialogsPage: {\n        usersData: [\n            { id: 1, name: 'John' },\n            { id: 2, name: 'Jesus' },\n            { id: 3, name: 'Jacob' },\n            { id: 4, name: 'Jessica' },\n            { id: 5, name: 'Jane' },\n            {id: 6, name: 'Jerry'}\n        ],\n\n        messageData: [\n            { id: 1, message: 'Huylow' },\n            { id: 2, message: 'Я хожу по воде' },\n            { id: 3, message: 'Жакоб или Якоб?' },\n            { id: 4, message: 'Альба?' },\n            { id: 5, message: 'Fuck' },\n            \n        ]\n    },\n    navbar:{ \n        friendData: [\n            { name: 'Jessica', id: 1 },\n            { name: 'John', id: 2 },\n            { name: 'Jacob', id: 3 }\n        ]\n    }\n}\nexport let addPost = (postMessage) => {\n    let newPost = {\n        id:5, \n        message: postMessage,\n        like: 0\n    };\n    state.profilePage.postsData.push(updateNewPostText);\n    rerenderEntireTree(state);\n};\nexport let updateNewPostText = (newText) => {\n    state.profilePage.newPostText.push = newText;\n    rerenderEntireTree(state);\n}\nexport default state;\n"]},"metadata":{},"sourceType":"module"}