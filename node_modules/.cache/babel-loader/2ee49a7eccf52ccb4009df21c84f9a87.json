{"ast":null,"code":"var _jsxFileName = \"/Users/veronikafedosenko/Desktop/Diploma/Bright_future_front_dev/01/project1/src/components/Article/Messages/Messages.jsx\";\nimport React from 'react';\nimport C from './Messages.module.css';\nimport MessageItem from './Message1/Message1';\nimport DialogItem from './DialogItem/DialogItem';\nimport { updateNewMessageBodyCreator, sendMessageCreator } from '../../../Redux/state';\n\nconst Messages = props => {\n  let state = props.store.getState().dialogsPage;\n  let userElem = messagesState.usersData.map(dialog => /*#__PURE__*/React.createElement(DialogItem, {\n    name: dialog.name,\n    id: dialog.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 56\n    }\n  }));\n  let messageElem = messagesState.messageData.map(message => /*#__PURE__*/React.createElement(MessageItem, {\n    message: message.message,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 62\n    }\n  }));\n  let newMessageBody = messagesState.newMessageBody; // let newMessageElement = React.createRef();\n\n  let onSendMessageClick = () => {\n    props.store.dispatch(sendMessageCreator());\n  };\n\n  let onNewMessageChange = e => {\n    let body = e.target.value;\n    props.store.dispatch(updateNewMessageBodyCreator(body));\n  };\n\n  return /*#__PURE__*/React.createElement(\"article\", {\n    className: C.article,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: C.users,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }\n  }, userElem), /*#__PURE__*/React.createElement(\"div\", {\n    className: C.messages,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 17\n    }\n  }, messageElem), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"textarea\", {\n    value: newMessageBody,\n    onChange: onNewMessageChange,\n    placeholder: \"Enter your message\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 26\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: onSendMessageClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 26\n    }\n  }, \"Send\")))));\n};\n\nexport default Messages;","map":{"version":3,"sources":["/Users/veronikafedosenko/Desktop/Diploma/Bright_future_front_dev/01/project1/src/components/Article/Messages/Messages.jsx"],"names":["React","C","MessageItem","DialogItem","updateNewMessageBodyCreator","sendMessageCreator","Messages","props","state","store","getState","dialogsPage","userElem","messagesState","usersData","map","dialog","name","id","messageElem","messageData","message","newMessageBody","onSendMessageClick","dispatch","onNewMessageChange","e","body","target","value","article","users","messages"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,CAAP,MAAc,uBAAd;AACA,OAAOC,WAAP,MAAwB,qBAAxB;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,SAASC,2BAAT,EAAsCC,kBAAtC,QAAgE,sBAAhE;;AAEA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAE5B,MAAIC,KAAK,GAAGD,KAAK,CAACE,KAAN,CAAYC,QAAZ,GAAuBC,WAAnC;AACA,MAAIC,QAAQ,GAAGC,aAAa,CAACC,SAAd,CAAwBC,GAAxB,CAA8BC,MAAD,iBAAW,oBAAC,UAAD;AAAY,IAAA,IAAI,EAAEA,MAAM,CAACC,IAAzB;AAA+B,IAAA,EAAE,EAAED,MAAM,CAACE,EAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAxC,CAAf;AACA,MAAIC,WAAW,GAAGN,aAAa,CAACO,WAAd,CAA0BL,GAA1B,CAAgCM,OAAD,iBAAY,oBAAC,WAAD;AAAa,IAAA,OAAO,EAAEA,OAAO,CAACA,OAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAA3C,CAAlB;AACA,MAAIC,cAAc,GAAGT,aAAa,CAACS,cAAnC,CAL4B,CAO5B;;AAEA,MAAIC,kBAAkB,GAAG,MAAM;AAC7BhB,IAAAA,KAAK,CAACE,KAAN,CAAYe,QAAZ,CAAqBnB,kBAAkB,EAAvC;AACD,GAFD;;AAGA,MAAIoB,kBAAkB,GAAIC,CAAD,IAAO;AAC7B,QAAIC,IAAI,GAAGD,CAAC,CAACE,MAAF,CAASC,KAApB;AACAtB,IAAAA,KAAK,CAACE,KAAN,CAAYe,QAAZ,CAAqBpB,2BAA2B,CAACuB,IAAD,CAAhD;AACF,GAHD;;AAKI,sBACI;AAAS,IAAA,SAAS,EAAE1B,CAAC,CAAC6B,OAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAE7B,CAAC,CAAC8B,KAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKnB,QADL,CADJ,eAII;AAAK,IAAA,SAAS,EAAEX,CAAC,CAAC+B,QAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMb,WAAN,CADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAK;AAAU,IAAA,KAAK,EAAEG,cAAjB;AACL,IAAA,QAAQ,EAAEG,kBADL;AAEL,IAAA,WAAW,EAAC,oBAFP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAL,CADJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAK;AAAQ,IAAA,OAAO,EAAGF,kBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAL,CAJJ,CAFJ,CAJJ,CADJ;AAiBH,CAlCD;;AAoCA,eAAejB,QAAf","sourcesContent":["import React from 'react';\nimport C from './Messages.module.css'\nimport MessageItem from './Message1/Message1';\nimport DialogItem from './DialogItem/DialogItem';\nimport { updateNewMessageBodyCreator, sendMessageCreator } from '../../../Redux/state';\n\nconst Messages = (props) => {\n\nlet state = props.store.getState().dialogsPage;\nlet userElem = messagesState.usersData.map( (dialog)=> <DialogItem name={dialog.name} id={dialog.id} />);\nlet messageElem = messagesState.messageData.map( (message)=> <MessageItem message={message.message}/>);\nlet newMessageBody = messagesState.newMessageBody;\n\n// let newMessageElement = React.createRef();\n\nlet onSendMessageClick = () => {\n  props.store.dispatch(sendMessageCreator()); \n}\nlet onNewMessageChange = (e) => {\n   let body = e.target.value;\n   props.store.dispatch(updateNewMessageBodyCreator(body));\n}\n\n    return (\n        <article className={C.article}>\n            <div className={C.users}>\n                {userElem} \n            </div>\n            <div className={C.messages}>\n                <div>{messageElem}</div>\n                <div>\n                    <div><textarea value={newMessageBody} \n                    onChange={onNewMessageChange}\n                    placeholder=\"Enter your message\"></textarea></div>\n                    <div><button onClick={ onSendMessageClick }>Send</button></div>\n                </div>\n                \n            </div>\n        </article>\n    )\n}\n\nexport default Messages;"]},"metadata":{},"sourceType":"module"}